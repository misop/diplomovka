#version 430

layout(triangles, equal_spacing, cw) in;

out _{
	vec4 vertex_eye;
	vec4 normal_eye;
	vec4 light_eye;
} tc[];

out _{
	vec4 vertex_eye;
	vec4 normal_eye;
	vec4 light_eye;
} te;

void main(void) {
    float u = gl_TessCoord.x, v = gl_TessCoord.y;

    vec3 p0 = gl_TessCoord.x * gl_in[0].gl_Position.xyz;
    vec3 p1 = gl_TessCoord.y * gl_in[1].gl_Position.xyz;
    vec3 p2 = gl_TessCoord.z * gl_in[2].gl_Position.xyz;
	vec3 position = (p0 + p1 + p2);
	te.vertex_eye = gl_TessCoord.x*tc[0].vertex_eye + gl_TessCoord.y*tc[1].vertex_eye + gl_TessCoord.z*tc[2].vertex_eye;
	te.normal_eye = gl_TessCoord.x*tc[0].normal_eye + gl_TessCoord.y*tc[1].normal_eye + gl_TessCoord.z*tc[2].normal_eye;
	te.light_eye = gl_TessCoord.x*tc[0].light_eye + gl_TessCoord.y*tc[1].light_eye + gl_TessCoord.z*tc[2].light_eye;
	//gl_Position = MVPmatrix * vec4(position, 1);
	gl_Position = vec4(position, 1);
}